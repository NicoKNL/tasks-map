name: PR Validation

on:
    pull_request:
        types: [opened, synchronize, reopened, labeled, unlabeled]

jobs:
    validate:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Check semver labels
              id: check-labels
              run: |
                  LABELS=$(gh pr view ${{ github.event.pull_request.number }} --json labels -q '.labels[].name' || echo "")

                  # Count semver labels
                  SEMVER_COUNT=$(echo "$LABELS" | grep -c "semver-" || true)

                  if [ "$SEMVER_COUNT" -eq 0 ]; then
                    echo "::error::PR must have exactly one semver label (semver-major, semver-minor, semver-patch, or semver-noimpact)"
                    exit 1
                  elif [ "$SEMVER_COUNT" -gt 1 ]; then
                    echo "::error::PR must have exactly one semver label, found multiple"
                    exit 1
                  fi

                  # Set the bump type based on the label
                  if echo "$LABELS" | grep -q "semver-major"; then
                    echo "bump_type=major" >> $GITHUB_OUTPUT
                  elif echo "$LABELS" | grep -q "semver-minor"; then
                    echo "bump_type=minor" >> $GITHUB_OUTPUT
                  elif echo "$LABELS" | grep -q "semver-patch"; then
                    echo "bump_type=patch" >> $GITHUB_OUTPUT
                  else
                    echo "bump_type=noimpact" >> $GITHUB_OUTPUT
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Python
              if: steps.check-labels.outputs.bump_type != 'noimpact'
              uses: actions/setup-python@v4
              with:
                  python-version: "3.13"

            - name: Dry run version bump
              if: steps.check-labels.outputs.bump_type != 'noimpact'
              id: version-bump
              run: |
                  echo "Would bump version (${{ steps.check-labels.outputs.bump_type }}):"
                  python .github/scripts/bump_version.py ${{ steps.check-labels.outputs.bump_type }}

                  echo -e "\nFiles that would be modified:"
                  git status --porcelain

            - name: Build test
              run: |
                  npm install
                  npm run build
